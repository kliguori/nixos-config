{ config, lib, pkgs, ... }: 

{
  imports =[ 
    ./hardware-configuration.nix                            # Include hardware config (generated by NixOS)
    ../../system/common/common.nix                          # Include common settings/services/programs
  ];

  # DO NOT CHANGE
  system.stateVersion = "25.05";

  # Boot settings
  boot = {

    # Kernel module for CD driver
    kernelModules = [ "sg" ];
    
    # Bootloader settings
    loader = { 
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
    
    # ZFS settings
    supportedFilesystems = [ "zfs" ];
    zfs.extraPools = [ "rpool" ];
    # rollback root to blank snapshot (note the lib.mkAfter means this command appends, not replaces others)
    initrd.postDeviceCommands = lib.mkAfter ''
      zpool import -N rpool
      zfs rollback -r rpool/root@blank
    '';
  };

  services.zfs.autoScrub.enable = true; # Enable automatic scrubbing of ZFS pools

  # Networking
  networking = {
    hostName = "ripper";
    hostId = "1dd676d3"; # head -c4 /dev/urandom | od -A none -t x4
    networkmanager.enable = true;
  };

    # Bind-mount persistant directories
  fileSystems."/etc/NetworkManager/system-connections" = {
    device = "/persist/etc/NetworkManager/system-connections";
    options = [ "bind" ];
  };

  # Tailscale state
  fileSystems."/var/lib/tailscale" = {
    device = "/persist/var/lib/tailscale";
    options = [ "bind" ];
  };

  # media/{movies,tv} binding
  fileSystems."/home/jack/media" = {
    device = "rpool/media";
    fsType = "zfs";
  };

  fileSystems."/home/jack/media/movies" = {
    device = "rpool/media/movies";
    fsType = "zfs";
  };

  fileSystems."/home/jack/media/tv" = {
    device = "rpool/media/tv";
    fsType = "zfs";
  };

  # Set directory/file permissions and create symlinks
  systemd.tmpfiles.rules = [
    # Permissions for bind mounted directories (also creates directories if they don't exist)
    "d /persist/etc/NetworkManager/system-connections 0700 root root - -" # NetworkManager connections
    "d /persist/var/lib/tailscale 0700 root root - -" # Tailscale state
    "d /home/jack/media 0700 jack users - -"
    "d /home/jack/media/movies 0700 jack users - -"
    "d /home/jack/media/tv 0700 jack users - -"
  ];

  # Graphical settings
  services.xserver = {
    enable = true; # Enable X server
    videoDrivers = [ 
      "modesetting" # Intel graphics drivers
      "nvidia"      # Nvidia graphics drivers
    ]; 
    desktopManager.gnome.enable = true; 
    displayManager.gdm.enable = true;
  };

  hardware = {
    graphics.enable = true; # Enable graphics hardware
    nvidia = {
      modesetting.enable = true;
      powerManagement.enable = false;
      powerManagement.finegrained = false;
      open = false;
      nvidiaSettings = true;
      package = config.boot.kernelPackages.nvidiaPackages.stable;
      prime = {
        offload = {
          enable = true;           # Enable offloading
          enableOffloadCmd = true; # Enable offload command
        };
        intelBusId = "PCI:0:2:0";  # Intel GPU PCI bus ID
        nvidiaBusId = "PCI:2:0:0"; # Nvidia GPU PCI bus ID
      };
    };
  };

  # Bluetooth settings
  services.blueman.enable = false; # Enable blueman
  
  # Host specific system packages
  environment.systemPackages = with pkgs; [
    makemkv
    handbrake
    brave
    kitty
    ghostty
    mpv
    libvirt
    virt-manager
    qemu
  ];

  virtualisation.libvirtd = {
    enable = true;
    qemu = {
      package = pkgs.qemu_kvm;
      ovmf.enable = true; # Enable OVMF for UEFI support
      runAsRoot = true; # Allow running as root
    };
  };

  users.users.jack = {
    isNormalUser = true;
    hashedPassword = "$y$j9T$PtbhYydbhh.z0qInjgrQS1$0oLkk3FlJztVtmVJqpWQWCDs8kdX2zzMkJKQkkzAtu9";
    shell = pkgs.zsh;
    description = "Jack";
    extraGroups = [ 
      "wheel" 
      "networkmanager" 
      "libvirtd" 
      "kvm" 
    ];
  };

  users.users.root.hashedPassword = "$y$j9T$PtbhYydbhh.z0qInjgrQS1$0oLkk3FlJztVtmVJqpWQWCDs8kdX2zzMkJKQkkzAtu9";

}
