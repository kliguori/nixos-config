{ config, lib, pkgs, ... }: 

{
  imports =[ 
    ./hardware-configuration.nix                            # Include hardware config (generated by NixOS)
    ./users.nix                                             # Include users
    ./samba.nix                                             # Include Samba configuration
    ../../system/common/common.nix                          # Include common settings/services/programs
  ];

  # DO NOT CHANGE
  system.stateVersion = "25.05";

  # Boot settings
  boot = {
    
    kernelParams = [ 
      "consoleblank=300"           # Turn off screen after 5 minutes
      "zfs.zfs_arc_max=4294967296" # Limit ZFS ARC size to 4GiB
    ];
    
    # Bootloader settings
    loader = { 
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
    
    # ZFS settings
    supportedFilesystems = [ "zfs" ];
    zfs.extraPools = [ 
      "rpool" 
      "data-pool"
      ];
    # rollback root to blank snapshot (note the lib.mkAfter means this command appends, not replaces others)
    initrd.postDeviceCommands = lib.mkAfter ''
      zpool import -N rpool
      zfs rollback -r rpool/root@blank
    '';
    initrd.luks.devices."crypt-data".device = "/dev/disk/by-label/luks-storage-drive";
  };

  # Bind-mount persistant directories
  fileSystems."/etc/NetworkManager/system-connections" = {
    device = "/persist/etc/NetworkManager/system-connections";
    options = [ "bind" ];
  };

  # # Tailscale state
  # fileSystems."/var/lib/tailscale" = {
  #   device = "/persist/var/lib/tailscale";
  #   options = [ "bind" ];
  # };

  # # Samba state
  # fileSystems."/var/lib/samba" = {
  #   device = "/persist/var/lib/samba";
  #   options = [ "bind" ];
  # };

  # Admin user SSH keys
  fileSystems."/home/admin/.ssh" = {
    device = "/persist/home/admin/.ssh";
    options = [ "bind" ];
  };

  # nixos-config
  fileSystems."/home/admin/nixos-config" = {
    device = "/persist/home/admin/nixos-config";
    options = [ "bind" ];
  };

  # Mount data-pool datasets
  fileSystems."/srv/media/movies" = {
    device = "data-pool/media/movies";
    fsType = "zfs";
  };

  fileSystems."/srv/media/tv" = {
    device = "data-pool/media/tv";
    fsType = "zfs";
  };

  fileSystems."/srv/users/kevin" = {
    device = "data-pool/users/kevin";
    fsType = "zfs";
  };

  fileSystems."/srv/users/jane" = {
    device = "data-pool/users/jane";
    fsType = "zfs";
  };

  fileSystems."/srv/users/shared" = {
    device = "data-pool/users/shared";
    fsType = "zfs";
  };

  fileSystems."/srv/photos" = {
    device = "data-pool/photos";
    fsType = "zfs";
  };


  # Set directory/file permissions and create symlinks
  systemd.tmpfiles.rules = [
    # Permissions for bind mounted directories (also creates directories if they don't exist)
    "d /persist/etc/NetworkManager/system-connections 0700 root root - -" # NetworkManager connections
    # "d /persist/var/lib/tailscale 0700 root root - -" # Tailscale state
    # "d /persist/var/lib/samba 0755 root root - -" # Samba
    "d /persist/home/admin/.ssh 0700 admin users - -" # Admin user SSH keys
    "d /persist/home/admin/nixos-config 0755 admin users - -" # nixos-config
    
    # Permissions for symlinked files (also creates file and parent directories if they don't exist)
    "f /persist/home/admin/.gitconfig 0644 admin users - -" # Git configuration

    # Symlink persistent files
    "L+ /home/admin/.gitconfig - - - - /persist/home/admin/.gitconfig" # Symlink .gitconfig
  ];

  # Networking
  networking = {
    hostName = "mycroft";
    hostId = "ba087eb7";
    networkmanager.enable = true;
  };

  # Bluetooth settings
  services.blueman.enable = false;

  # Host specific system packages
  environment.systemPackages = with pkgs; [];

  # Enable SSH for remote management
  services.openssh = {
    enable = true;
    settings = {
      PermitRootLogin = "no";
      PasswordAuthentication = false;
    };
  };  

  # Services
  services = {
    jellyfin.enable = true;
    vaultwarden.enable = true;
    immich.enable = true;
    home-assistant = {
      enable = true;
      extraComponents = [
        # Components required to complete the onboarding
        "analytics"
        "google_translate"
        "met"
        "radio_browser"
        "shopping_list"
        "isal"
      ];
      config = {
        default_config = {};
      };
    };
    grafana.enable = true;
    prometheus.enable = true;
    netbird.enable = true;
    homepage-dashboard.enable = true;
    nfs.server.enable = true;
  };

  users.mutableUsers = false;
  users.users.root.hashedPassword = "$y$j9T$PtbhYydbhh.z0qInjgrQS1$0oLkk3FlJztVtmVJqpWQWCDs8kdX2zzMkJKQkkzAtu9";

}
